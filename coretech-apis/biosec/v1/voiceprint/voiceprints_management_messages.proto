/*-
 * #%L
 * gatekeeper-api-protoc
 * %%
 * Copyright (C) 2021 - 2026 Nuance Communications Inc. All Rights Reserved.
 * %%
 * The copyright to the computer program(s) herein is the property of
 * Nuance Communications Inc. The program(s) may be used and/or copied
 * only with the written permission from Nuance Communications Inc.
 * or in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 * #L%
 */

syntax = "proto3";

package nuance.biosec.v1.voiceprint;

option java_package = "com.nuance.rpc.biosec.v1.voiceprint";
option java_multiple_files = true;

import "nuance/biosec/v1/voiceprint/voiceprints_processing_messages.proto";
import "nuance/biosec/v1/voiceprint/voiceprints_common_types.proto";
import "nuance/biosec/v1/common_types.proto";
import "nuance/rpc/status.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// Input message that defines parameters for [CreateVoiceprintProfile](#CreateVoiceprintProfile).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Not used
message CreateVoiceprintProfileRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Owner of the print and a mandatory print tag that is used to distinguish between different voiceprint profiles that belong to the same owner. Print owner can be a person or a fraudster.
  OwnerAndTag owner = 2;
  // Optional. Properties that are set when creating a voiceprint profile.
  VoiceprintProfileDetailsForCreate details = 3;
  // Optional. A field mask used to specify the [CreateVoiceprintProfileRequest](#nuance.biosec.v1.voiceprint.CreateVoiceprintProfileRequest) fields that the method sets.
  google.protobuf.FieldMask field_mask = 4;
}

// Output message that defines parameters returned by [CreateVoiceprintProfile](#CreateVoiceprintProfile).
message CreateVoiceprintProfileResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1;         
  // Optional. Unique ID of the newly created voiceprint profile.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
}

// Input message that defines parameters for [GetGkVoiceprintProfileId](#GetGkVoiceprintProfileId).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Not used
// * gk_session_id: Not used
// * gk_scope_id: Mandatory
// * configset_id: Not used
message GetGkVoiceprintProfileIdRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Owner of the print and a print tag that is used to distinguish between different voiceprint profiles that belong to the same owner. Print owner can be a person or a fraudster. If a tag is specified, the request returns only one ID. If the tag is null or empty, the request returns all IDs.
  OwnerAndTag owner = 2;                     
}

// Output message that defines parameters returned by [GetGkVoiceprintProfileId](#GetGkVoiceprintProfileId).
message GetGkVoiceprintProfileIdResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1;                           
  // Unique ID of the voiceprint profile.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
}

// Input message that defines parameters for [GetVoiceprintProfileDetails](#GetVoiceprintProfileDetails).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Not used
// * gk_session_id: Not used
// * gk_scope_id: Mandatory
// * configset_id: Not used
message GetVoiceprintProfileDetailsRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. The voiceprint profile that the request refers to, specified in two alternative ways.
  oneof input {                                                
    // Unique ID of the existing voiceprint profile.
    nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
	  // Owner of the print and a mandatory print tag that is used to distinguish between different voiceprints profiles that belong to the same owner. Print owner can be a person or a fraudster.
    OwnerAndTag owner_and_tag = 3;                             
  }
  // Optional. A field mask used to specify the [VoiceprintProfileDetailsForRead](#nuance.biosec.v1.voiceprint.VoiceprintProfileDetailsForRead) fields that the method reads.
  google.protobuf.FieldMask field_mask = 4;
}

// Output message that defines parameters returned by [GetVoiceprintProfileDetails](#GetVoiceprintProfileDetails).
message GetVoiceprintProfileDetailsResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1;                
  // Optional. Voiceprint profile details. Includes both read-only and writable fields.
  VoiceprintProfileDetailsForRead details = 2; 
}

// Input message that defines parameters for [UpdateVoiceprintProfileDetails](#UpdateVoiceprintProfileDetails).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Not used
message UpdateVoiceprintProfileDetailsRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. The Voiceprint profile that the request refers to, specified in two alternative ways.
  oneof input {                                               
    // Unique ID of the voiceprint profile.
    nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
	// Owner of the print and a mandatory print tag that is used to distinguish between different voiceprints profiles that belong to the same owner. Print owner can be a person or a fraudster.
    OwnerAndTag owner_and_tag = 3;                            
  }
  // Mandatory. Voiceprint Profile details that are set. Includes only writable fields.
  VoiceprintProfileDetailsForUpdate details = 4;
  // Mandatory. A field mask used to specify the [VoiceprintProfileDetailsForUpdate](#nuance.biosec.v1.voiceprint.VoiceprintProfileDetailsForUpdate) fields that the method sets.
  google.protobuf.FieldMask field_mask = 5;
}

// Output message that defines parameters returned by [UpdateVoiceprintProfileDetails](#UpdateVoiceprintProfileDetails).
message UpdateVoiceprintProfileDetailsResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1;  
}

////////////////
// Lock Print //
////////////////

// Input message that defines parameters for [LockVoiceprintProfile](#LockVoiceprintProfile).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Not used
message LockVoiceprintProfileRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Unique ID of the voiceprint profile that is locked.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
  // Optional. Specifies the locking reason.
  string reason = 3;
}

// Output message that defines parameters returned by [LockVoiceprintProfile](#LockVoiceprintProfile).
message LockVoiceprintProfileResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1; 
}

//////////////////
// Unlock Print //
//////////////////

// Input message that defines parameters for [UnlockVoiceprintProfile](#UnlockVoiceprintProfile).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Not used
message UnlockVoiceprintProfileRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Unique ID of the voiceprint profile that is unlocked.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
}

// Output message that defines parameters returned by [UnlockVoiceprintProfile](#UnlockVoiceprintProfile).
message UnlockVoiceprintProfileResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1; 
}

//////////////////
// Delete Print //
//////////////////

// Input message that defines parameters for [DeleteVoiceprintTemplate](#DeleteVoiceprintTemplate).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Not used
message DeleteVoiceprintTemplateRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Unique ID of the voiceprint profile.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
}

// Output message that defines parameters returned by [DeleteVoiceprintTemplate](#DeleteVoiceprintTemplate).
message DeleteVoiceprintTemplateResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1; 
}

///////////////////////////////
// Delete Voiceprint Profile //
///////////////////////////////

// Input message that defines parameters for [DeleteVoiceprintProfile](#DeleteVoiceprintProfile).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Not used
message DeleteVoiceprintProfileRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Unique ID of the voiceprint profile.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
  // Optional. Specifies the deletion reason.
  string reason = 3;
}

// Output message that defines parameters returned by [DeleteVoiceprintProfile](#DeleteVoiceprintProfile).
message DeleteVoiceprintProfileResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1;
}

////////////////////////
// Enrollment Segment //
////////////////////////

// Input message that defines parameters for [ListEnrollmentSegments](#ListEnrollmentSegments).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Not used
// * gk_session_id: Not used
// * gk_scope_id: Mandatory
// * configset_id: Not used
message ListEnrollmentSegmentsRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Unique ID of the voiceprint profile.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
}

// Output message that defines parameters for [ListEnrollmentSegments](#ListEnrollmentSegments).
message ListEnrollmentSegmentsResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1;
  // Optional. Additional information about the enrollment segments in the collection.
  repeated EnrollmentSegmentDetails enrollment_segments_details = 2;
}

// Input message that defines parameters for [RemoveEnrollmentSegment](#RemoveEnrollmentSegment).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Not used
message RemoveEnrollmentSegmentRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Unique ID of the voiceprint profile.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 2;
  // Mandatory. Unique ID of the processed audio segment that the method removes from the enrollment segments collection.
  nuance.biosec.v1.UniqueId gk_processed_audio_id = 3;
}

// Output message that defines parameters returned by [RemoveEnrollmentSegment](#RemoveEnrollmentSegment).
message RemoveEnrollmentSegmentResponse {
  // Mandatory. General operation status.
  nuance.rpc.Status status = 1; 
}

/////////////////////
// Common Messages //
/////////////////////

// Contains the readable fields of the voiceprint profile. Included in [GetVoiceprintProfileDetailsResponse](#nuance.biosec.v1.voiceprint.GetVoiceprintProfileDetailsResponse).
// Fields that are read can be defined by a fieldmask.
message VoiceprintProfileDetailsForRead {
  // Optional. Unique ID of the voiceprint profile.
  nuance.biosec.v1.UniqueId gk_voiceprint_profile_id = 1;
  // Optional. Unique ID of the voiceprint profile owner.
  nuance.biosec.v1.UniqueId gk_owner_id = 2;
  // Optional. Owner type. Can be a person or a fraudster.
  nuance.biosec.v1.OwnerType owner_type = 3;
  // Optional. Tag used to distinguish between different voiceprint profiles that belong to the same owner.
  string tag = 4;                                           
  // Optional. The current version of the voiceprint profile (incremented each time a print is retrained).
  google.protobuf.Int32Value version = 5;                   
  // Optional. Indicates whether the voiceprint profile is trained or not.
  VoiceprintProfileStatus status = 6;
  // Optional. Indicates whether adaption is performed or not.
  google.protobuf.BoolValue near_term_adaptation = 9;
  // Optional. Lock status.
  VoiceprintProfileLockInfo lock_info = 7;
  // Optional. Voiceprint template information.
  VoiceprintProfileTemplateInfo template_info = 8;
  // Optional. Time and date of the voiceprint profile creation.
  google.protobuf.Timestamp creation_timestamp = 997;
  // Optional. Time and date of the last update.
  google.protobuf.Timestamp modification_timestamp = 998;
  // Optional. Custom application data in a list of key-value pairs.
  map<string,string> custom_data = 999;                     
}

// Contains fields that the system uses to create a voiceprint profile. Included in [CreateVoiceprintProfileRequest](#nuance.biosec.v1.voiceprint.CreateVoiceprintProfileRequest).
// Fields that are set can be defined by a fieldmask.
message VoiceprintProfileDetailsForCreate {
  // Optional. Custom application data in a list of key-value pairs.
  map<string,string> custom_data = 999;
}

// Contains the writable fields of the voiceprint profile. Included in [UpdateVoiceprintProfileDetailsRequest](#nuance.biosec.v1.voiceprint.UpdateVoiceprintProfileDetailsRequest).
// Fields that are updated can be defined by a fieldmask.
message VoiceprintProfileDetailsForUpdate {
  // Optional. Custom application data in a list of key-value pairs.
  map<string,string> custom_data = 999;                    
}

// Contains information about the voiceprint profile template.
// Both fields are not set if the print is not trained.
message VoiceprintProfileTemplateInfo {
  // Optional. Unique ID of the calibration model that is used to train the voiceprint profile template.
  nuance.biosec.v1.UniqueId gk_calibration_model_revision_id = 1;
  // Optional. A score between 0 and 100 that can be used to categorize voices into classes according to various factors such as timbre, pitch, and so on.
  google.protobuf.FloatValue voice_class_score = 2;
  // Optional. The most recent training time of the voiceprint profile.
  google.protobuf.Timestamp latest_train_timestamp = 3;
}

// Contains information about the locking state of a voiceprint profile.
message VoiceprintProfileLockInfo {
  // Optional. Specifies whether the print is locked or not.
  LockStatus status = 1;       
  // Optional. The user ID of the analyst/agent that locked the print. Relevant only in case of manual lock.
  string locked_by = 2;
  // Optional. Specifies the locking reason if it is a standard one.
  nuance.biosec.v1.LockReason lock_reason = 7;
  // Optional. A text message that specifies the reason if it is not a standard one.
  string reason = 3;
  // Optional. The number of consecutive mismatches, used when a voiceprint profile is locked due to too many mismatches.
  google.protobuf.Int32Value mismatch_counter = 4; 
  // Optional. Specifies the voiceprint profile locking time.
  google.protobuf.Timestamp lock_timestamp = 5;
  // Optional. The time when the voiceprint profile (if locked) is automatically unlocked.
  google.protobuf.Timestamp auto_unlock_timestamp = 6;
}

// Identifies a voiceprint profile by owner and tag.
message OwnerAndTag {
  // Mandatory. Print owner, can be a person or a fraudster.
  oneof owner { 
    // Unique person's ID.
    nuance.biosec.v1.UniqueId gk_person_id = 1;
	  // Unique fraudster's ID.
    nuance.biosec.v1.UniqueId gk_fraudster_id = 2;
	  // The person's ID. Must be unique at the scope level and used together with a scope ID. Normally specified in the context field.
    string person_id = 3;                          
	  // The fraudster's ID. Must be unique at the scope level and used together with a scope ID. Normally specified in the context field.
    string fraudster_id = 4;
  }
  // Mandatory. Tag used to distinguish between different voiceprint profiles that belong to the same owner.
  string tag = 5;                                    
}
