/*-
 * #%L
 * gatekeeper-api-protoc
 * %%
 * Copyright (C) 2021 - 2026 Nuance Communications Inc. All Rights Reserved.
 * %%
 * The copyright to the computer program(s) herein is the property of
 * Nuance Communications Inc. The program(s) may be used and/or copied
 * only with the written permission from Nuance Communications Inc.
 * or in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 * #L%
 */


syntax = "proto3";

package nuance.biosec.v1.sessions;

option java_package = "com.nuance.rpc.biosec.v1.sessions";
option java_multiple_files = true;

import "nuance/biosec/v1/common_types.proto";
import "nuance/rpc/status.proto";
import "nuance/rpc/status_code.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "nuance/biosec/v1/sessions/sessions_manager_enums.proto";

// Input message that defines parameters for [StartSession](#StartSession).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Optional
// * gk_session_id: Not used
// * gk_scope_id: Mandatory
// * configset_id: Optional
message StartSessionRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Mandatory. Session type.
  nuance.biosec.v1.SessionType session_type = 2;
  // Optional. Additional session data.
  SessionDetailsForCreate details = 3;
  // Optional. A field mask used to specify the [SessionDetailsForCreate](#nuance.biosec.v1.sessions.SessionDetailsForCreate) fields that the method sets.
  google.protobuf.FieldMask field_mask = 4;
  // Indicates that this session is part of a test. Set to true in order to exclude this session from reports.
  bool is_test = 5;
}

// Output message that defines parameters returned by [StartSession](#StartSession).
message StartSessionResponse {
  // General operation status.
  nuance.rpc.Status status = 1;
  // Unique ID of the newly created session.
  nuance.biosec.v1.UniqueId gk_session_id = 2;
  // Unique ID of the engagement that this session belongs to. In case an engagement ID is not specified in the request context, 
  // the value contains the ID of a newly created engagement.
  nuance.biosec.v1.UniqueId gk_engagement_id = 3;
}

// Input message that defines parameters for [StopSession](#StopSession).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Mandatory
// * gk_scope_id: Mandatory
// * configset_id: Optional
message StopSessionRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
}

// Output message that defines parameters returned by [StopSession](#StopSession).
message StopSessionResponse {
  // General operation status.
  nuance.rpc.Status status = 1;
}

// Input message that defines parameters for [UpdateSession](#UpdateSession).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Mandatory
// * gk_session_id: Optional
// * gk_scope_id: Mandatory
// * configset_id: Not used
message UpdateSessionRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Optional. Session's unique ID.
  nuance.biosec.v1.UniqueId gk_session_id = 2;
  // Mandatory. Details that the method updates.
  SessionDetailsForUpdate details = 3;
  // Mandatory. A field mask used to specify the [SessionDetailsForUpdate](#nuance.biosec.v1.sessions.SessionDetailsForUpdate) fields that the method sets.
  google.protobuf.FieldMask field_mask = 4;
}

// Output message that defines parameters returned by [UpdateSession](#UpdateSession).
message UpdateSessionResponse {
  // General operation status.
  nuance.rpc.Status status = 1;
}

// Input message that defines parameters for [GetSessionDetails](#GetSessionDetails).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Not used
// * gk_session_id: Optional
// * gk_scope_id: Mandatory
// * configset_id: Not used
message GetSessionDetailsRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Optional. Session's unique ID.
  nuance.biosec.v1.UniqueId gk_session_id = 2;
  // Optional. A field mask used to specify the [SessionDetailsForRead](#nuance.biosec.v1.sessions.SessionDetailsForRead) fields that the method reads.
  google.protobuf.FieldMask field_mask = 3;
}

// Output message that defines parameters returned by [GetSessionDetails](#GetSessionDetails).
// {{< alert >}}To get details of the already ended session, use export services.{{< /alert >}}
message GetSessionDetailsResponse {
  // General operation status.
  nuance.rpc.Status status = 1;
  // Session details. Session details are available in one of the following cases: <br/><br/>
  // <ul> <li>The session is currently active.</li>
  // <li>The post-call session did not run or end yet. <br/>
  // As the post-call is not finished or ignored, previous sessions remain in the cache, even if they are no longer active.</li></ul>
  SessionDetailsForRead details = 2;
}

// Input message that defines parameters for [GetSessionDecision](#GetSessionDecision).
//
// Uses the context field as follows:
//
// * gk_engagement_id: Not used
// * gk_session_id: Optional
// * gk_scope_id: Mandatory
// * configset_id: Not used
message GetSessionDecisionRequest {
  // Mandatory. General request context.
  nuance.biosec.v1.Context context = 1;
  // Optional. Session's unique ID.
  nuance.biosec.v1.UniqueId gk_session_id = 2;
}

// Output message that defines parameters returned by [GetSessionDecision](#GetSessionDecision).
message GetSessionDecisionResponse {
  // General operation status.
  nuance.rpc.Status status = 1;
  // The risk score.
  google.protobuf.Int32Value risk = 2;
  // The risk score's reliability.
  google.protobuf.Int32Value reliability = 3;
  // The session decision.
  nuance.biosec.v1.Decision decision = 4;
  // The session decision reason.
  DecisionReason decision_reason = 5;
}

//////////////////
// Global Types //
//////////////////

// Contains the readable fields of the session. Included in [GetSessionDetailsResponse](#nuance.biosec.v1.sessions.GetSessionDetailsResponse).
message SessionDetailsForRead {
  // Session's unique ID.
  nuance.biosec.v1.UniqueId gk_session_id = 1;
  // Session type.
  nuance.biosec.v1.SessionType session_type = 2;
  // ID of the engagement that this session belongs to.
  nuance.biosec.v1.UniqueId gk_engagement_id = 3;
  // Indicates that this session is part of a test.
  bool is_test = 4;
  // Specifies if the session is still active.
  bool is_active = 5;
  // The external session's ID, as provided by the client.
  string session_id = 6;
  // Specifies if the session is marked as suspicious by the contact center agent.
  bool is_suspicious = 7;
  // The reason for marking this session as suspicious.
  string suspicious_reason = 8;
  // Automatic Number Identification - identifies the caller.
  string ani = 9;
  // Dialed Number Identification Service - identifies the receiver of the call.
  string dnis = 10;
  // ID of the agent that handled the call.
  string agent_id = 11;
  // The agent's extension.
  string agent_extension = 12;
  // The call type.
  CallType call_type = 13;
  // The session’s claimed person ID.
  nuance.biosec.v1.UniqueId claimed_gk_person_id = 14;
  // Indicates if the call was abandoned before it was fully handled.
  bool was_abandon = 15;
  // The session's risk scores and decision.
  SessionRiskInfo risk_info = 16;
  // Optional. The session's main purpose. Can be enrollment, verification, and so on.
  SessionIntent session_intent = 17;
  // Optional. The session business type, also known as line of business.
  string business_type = 18;
  // Optional. The name of the datacenter from which the request originated.
  string datacenter = 19;
  // Optional. Error occurred during the session.
  SessionErrorDetailsForRead session_error = 20;
  // Optional. Original size of persons group that is requested for identification.
  google.protobuf.Int32Value group_size = 21;
  // Date and time of the session's creation.
  google.protobuf.Timestamp creation_timestamp = 996;
  // Date and time of the session's completion.
  google.protobuf.Timestamp completion_timestamp = 997;
  // Date and time of last update.
  google.protobuf.Timestamp modification_timestamp = 998;
  // List of custom application data in key-value pairs.
  map<string, string> custom_data = 999;
}

// Contains fields that the system uses to create a session. Included in [StartSession](#StartSession).
message SessionDetailsForCreate {
  // Optional. The external session's ID provided by the client.
  string session_id = 1;
  // Optional. Automatic Number Identification - identifies the caller.
  string ani = 2;
  // Optional. Dialed Number Identification Service - identifies the receiver of the call.
  string dnis = 3;
  // Optional. The call type.
  CallType call_type = 4;
  // Optional. The session’s claimed person ID.
  nuance.biosec.v1.UniqueId claimed_gk_person_id = 5;
  // Optional. The session's main purpose. Can be enrollment, verification, and so on.
  SessionIntent session_intent = 6;
  // Optional. The session business type, also known as line of business. Free text, up to 64 characters.
  string business_type = 7;
  // Optional. The name of the datacenter from which the request originated. Free text, up to 64 characters.
  string datacenter = 8;
  // Optional. Original size of persons' group that is requested for identification.
  google.protobuf.Int32Value group_size = 9;
  // Optional. List of custom application data in key-value pairs.
  map<string, string> custom_data = 999;
}

// Contains the writable fields of the session. Included in [StartSession](#StartSession).
message SessionDetailsForUpdate {
  // Optional. The external session's ID provided by the client.
  string session_id = 1;
  // Optional. Specifies if the Session is marked as suspicious by the contact center agent.
  bool is_suspicious = 3;
  // Optional. The reason for marking this session as suspicious.
  string suspicious_reason = 4;
  // Optional. Automatic Number Identification - identifies the caller.
  string ani = 5;
  // Optional. Dialed Number Identification Service - identifies the receiver of the call.
  string dnis = 6;
  // Optional. The call type.
  CallType call_type = 7;
  // Optional. The session’s claimed person ID.
  nuance.biosec.v1.UniqueId claimed_gk_person_id = 8;
  // Optional. Indicates if the call was abandoned before it was fully handled.
  bool was_abandon = 9;
  // Optional. The session's main purpose. Can be enrollment, verification, and so on.
  SessionIntent session_intent = 10;
  // Optional. The session business type, also known as line of business. Free text, up to 64 characters.
  string business_type = 11;
  // Optional. The name of the datacenter from which the request originated. Free text, up to 64 characters.
  string datacenter = 12;
  // Optional. Error occurred during the Session.
  SessionErrorDetailsForUpdate session_error = 13;
  // Optional. Original size of persons' group that is requested for identification.
  google.protobuf.Int32Value group_size = 14;
  // Optional. List of custom application data in key-value pairs.
  map<string, string> custom_data = 999;
}

// Contains the writable fields of the error occurred during the session. Included in [SessionDetailsForUpdate](#nuance.biosec.v1.sessions.SessionDetailsForUpdate).
message SessionErrorDetailsForUpdate {
  // Optional. Represents the status code received from the operation response.
  nuance.rpc.StatusCode status_code = 1;
  // Optional. Error message. This value should not contain sensitive information.
  string error_message = 2;
  // Optional. Error context. Represents the operation name.
  string error_context = 3;
  // Optional. Date and time at which the error is reported.
  google.protobuf.Timestamp error_timestamp = 4;
}

// Contains the readable fields of the error occurred during the session. Included in [SessionDetailsForRead](#nuance.biosec.v1.sessions.SessionDetailsForRead).
message SessionErrorDetailsForRead {
  // Optional. Represents the status code received from the operation response.
  nuance.rpc.StatusCode status_code = 1;
  // Optional. Error message. This value should not contain sensitive information.
  string error_message = 2;
  // Optional. Error context. Represents the operation name.
  string error_context = 3;
  // Optional. Date and time at which the error is reported.
  google.protobuf.Timestamp error_timestamp = 4;
}

// The session's risk scores and decision.
message SessionRiskInfo {
  // The risk score.
  google.protobuf.Int32Value risk = 1;
  // The risk score's reliability.
  google.protobuf.Int32Value reliability = 2;
  // The session decision.
  nuance.biosec.v1.Decision decision = 3;
  // The session decision reason.
  DecisionReason decision_reason = 4;
}
