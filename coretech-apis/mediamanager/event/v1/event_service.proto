/*-
 * #%L
 * media-manager-api-proto
 * %%
 * Copyright (C) 2021 - 2026 Nuance Communications Inc. All Rights Reserved.
 * %%
 * The copyright to the computer program(s) herein is the property of
 * Nuance Communications Inc. The program(s) may be used and/or copied
 * only with the written permission from Nuance Communications Inc.
 * or in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 * #L%
 */

syntax = "proto3";

package nuance.mediamanager.event.v1;

import "nuance/mediamanager/event/v1/event_resources.proto";
import "nuance/rpc/status.proto";
import "google/api/annotations.proto";

option java_multiple_files = true;
option java_package = "com.nuance.rpc.mediamanager.event.v1";

// This service allows to publish events to be consumed by subscribed consumers.
// Event consumers can be both internal and external Media Manager clients.
service EventService {
  // Creates an event and publishes it.
  rpc CreateEvent (CreateEventRequest) returns (CreateEventResponse) {
    option (google.api.http) = {
      post: "/v1/events"
      body: "event"
    };
  }
}

// Input message that defines parameters for [CreateEvent](#CreateEvent).
message CreateEventRequest {
  // Optional and deprecated. Unique ID of the event stream used to publish events to.
  string event_stream_id = 1;
  // Mandatory. The event to publish.
  Event event = 2;
}

// Output message that defines parameters returned by [CreateEvent](#CreateEvent).
message CreateEventResponse {
  // General operation status.
  nuance.rpc.Status status = 1;
  // Unique ID identifying the created event.
  string event_id = 2;
}
